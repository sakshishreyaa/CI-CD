
name: CI-CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Build the docker_compose
      run: docker-compose up -d --build

  Test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
        - 6379:6379
      mongodb:
        image: mongo
        ports:
        - 27017:27017
        
    
    steps:
    - uses: actions/checkout@v2 
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: "3.6.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test the apis
      env:
        MONGODB_URL: mongodb://0.0.0.0:27017
      run: |
        cd src
        python3 test_apis.py

  DeployTesting:
    # deploy testing when pull req on master
    if: github.event_name == 'pull_request'
    needs: [build , test]
    runs-on: ubuntu-latest
    environment:
      name: testing
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2

        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.HOSTNAME  }}
          USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
          
            cd /home/ubuntu/CI-CD &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            docker-compose -f docker-compose.yml up -d --build 
          '
  DeployStaging:
    # dep stage when changes pushe to devvel or staging

    if: ( github.event_name == 'push' && (github.event.ref == 'refs/heads/develop' || github.event.ref == 'refs/heads/staging'))
    needs: [build ]
    runs-on: ubuntu-latest
    environment:
      name: staging
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2

        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.HOSTNAME  }}
          USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
          
            cd /home/ubuntu/CI-CD &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            docker-compose -f docker-compose.yml up -d --build 
          '
